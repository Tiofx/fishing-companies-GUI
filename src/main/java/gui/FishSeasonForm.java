package gui;

import controllers.FishRegionController;
import gui.custom.SqlComboBox;
import models.gui.comboBox.FishRegionComboBoxModel;
import models.sql.FishRegion;
import models.sql.FishSeason;
import org.jdesktop.swingx.JXDatePicker;
import unit.IUniversalForm;

import javax.sql.rowset.JdbcRowSet;
import javax.swing.*;
import java.awt.*;
import java.util.Date;

public class FishSeasonForm extends JPanel implements IUniversalForm<FishSeason> {
    private JPanel rootPanel;
    private JXDatePicker beginDate;
    private JXDatePicker endDate;
    private SqlComboBox placeNameCB;

    private FishRegionController fishRegion;

    public FishSeasonForm(JdbcRowSet jrs) {
        this(new FishRegionController(jrs));
    }

    public FishSeasonForm(FishRegionController fishRegion) {
        super();
        add(rootPanel);
        this.fishRegion = fishRegion;

        placeNameCB.setModel(new FishRegionComboBoxModel(fishRegion));
    }

    public FishSeasonForm() {
        super();
        add(rootPanel);
    }

    public static void main(String[] args) {
        FishSeasonForm form = new FishSeasonForm();
        new Thread(() ->
                JOptionPane.showMessageDialog(
                        null,
                        form,
                        "Form test",
                        JOptionPane.PLAIN_MESSAGE)
        ).start();
    }

    @Override
    public FishSeason getRecord() {
        return new FishSeason(getFishRegionId(), getBeginDate(), getEndDate());
    }

    @Override
    public FishSeason getRawRecord() {
        FishSeason record = new FishSeason();

        if (canGetFishRegionId())
            record.setFishRegionId(getFishRegionId());
        if (canGetBeginDate())
            record.setBegin(getBeginDate());
        if (canGetEndDate())
            record.setEnd(getEndDate());
        return null;
    }

    @Override
    public void setRecord(FishSeason record) {
        ComboBoxModel cb = new FishRegionComboBoxModel(fishRegion);
        cb.setSelectedItem(record.getFishRegionId());
        placeNameCB.setModel(cb);
        beginDate.setDate(new Date(record.getBegin().getTime()));
        endDate.setDate(new Date(record.getEnd().getTime()));

    }

    @Override
    public Boolean[] canGets() {
        return new Boolean[]{canGetFishRegionId(), canGetBeginDate(), canGetEndDate()};
    }

    public boolean canGetFishRegionId() {
        try {
            if (getFishRegionId() != -1) {
                return true;
            } else return false;
        } catch (Throwable t) {
            return false;
        }
    }

    public boolean canGetBeginDate() {
        try {
            getBeginDate();
            return true;
        } catch (Throwable t) {
            return false;
        }
    }

    public boolean canGetEndDate() {
        try {
            getEndDate();
            return true;
        } catch (Throwable t) {
            return false;
        }
    }

    protected FishRegion getFishRegion() {
        return ((FishRegion) placeNameCB.getSelectedItem());
    }

    public int getFishRegionId() {
        return getFishRegion().getId();
    }

    public java.sql.Date getBeginDate() {
        return new java.sql.Date(beginDate.getDate().getTime());
    }

    public java.sql.Date getEndDate() {
        return new java.sql.Date(endDate.getDate().getTime());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("place name");
        rootPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("end");
        rootPanel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("begin");
        rootPanel.add(label3, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        beginDate = new JXDatePicker();
        rootPanel.add(beginDate, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        endDate = new JXDatePicker();
        rootPanel.add(endDate, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        placeNameCB = new SqlComboBox();
        rootPanel.add(placeNameCB, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
